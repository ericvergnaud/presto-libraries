define HttpRequestMethod as enumerated Text with symbols:
	CONNECT with "CONNECT" as value
	DELETE with "DELETE" as value
	GET with "GET" as value
	HEAD with "HEAD" as value
	OPTIONS with "OPTIONS" as value
	PATCH with "PATCH" as value
	POST with "POST" as value
	PUT with "PUT" as value
	TRACE with "TRACE" as value

define httpRequestMethod as storable HttpRequestMethod attribute

define Url as storable native resource with attributes path, encoding and httpRequestMethod, and bindings:
	
	define category bindings as:
		Java: prompto.internet.Url
		C#: prompto.internet.Url
		Python2: Url from module: prompto.internet.Url
		Python3: Url from module: prompto.internet.Url
		JavaScript: Url from module: prompto/internet/Url.js

// many objects have an Url  
define url as storable Url attribute

define "reads from www.google.com" as test method doing:
	// need a cross-domain enabled page for browser testing
	content = read all from Url with "https://www.google.com/" as path
and verifying: 
	content contains "doctype"


define "reads async from www.google.com" as test method doing:
	// need a cross-domain enabled page for browser testing
	content = ""
	read all from Url with "https://www.google.com/" as path then with result:
		content = result
and verifying: 
	content contains "doctype"


define encodeURI as native method receiving Text uri returning Text doing:
    Java: return java.net.URLEncoder.encode(uri, "UTF-8");
    C#: return System.Web.HttpUtility.UrlEncode(uri);
    Python2: return quote(uri) from module: urllib
    Python3: return quote(uri) from module: urllib.parse
    JavaScript: return encodeURIComponent(uri);


define decodeURI as native method receiving Text uri returning Text doing:
    Java: return java.net.URLDecoder.decode(uri, "UTF-8");
    C#: return System.Web.HttpUtility.UrlDecode(uri);
    Python2: return unquote(uri) from module: urllib
    Python3: return unquote(uri) from module: urllib.parse
    JavaScript: return decodeURIComponent(uri);

define "encodes and decodes uri" as test method doing:
	uri = "Black Mamba"
	encoded = encodeURI uri
	decoded = decodeURI encoded
and verifying: 
	encoded = "Black%20Mamba" or encoded = "Black+Mamba"
	uri = decoded
