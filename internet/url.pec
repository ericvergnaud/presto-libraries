define HttpMethod as enumerated Text with symbols:
	HTTP_CONNECT with "CONNECT" as value
	HTTP_DELETE with "DELETE" as value
	HTTP_GET with "GET" as value
	HTTP_HEAD with "HEAD" as value
	HTTP_OPTIONS with "OPTIONS" as value
	HTTP_PATCH with "PATCH" as value
	HTTP_POST with "POST" as value
	HTTP_PUT with "PUT" as value
	HTTP_TRACE with "TRACE" as value

define httpMethod as storable HttpMethod attribute

define HttpHeader as native category with attributes name and text, and bindings:

	define category bindings as:
		Java: prompto.internet.HttpHeader
		C#: prompto.internet.HttpHeader
		Python2: HttpHeader from module: prompto.internet.HttpHeader
		Python3: HttpHeader from module: prompto.internet.HttpHeader
		JavaScript: HttpHeader from module: prompto/internet/HttpHeader.js

define httpHeaders as HttpHeader[] attribute
	
define HttpContentType as enumerated Text with symbols:
	HTTP_URL_ENCODED with "application/x-www-form-urlencoded" as value
	HTTP_FORM_DATA with "multipart/form-data" as value
	HTTP_TEXT_PLAIN with "text/plain" as value
	HTTP_APPLICATION_JSON with "application/json" as value

define Url as native resource with attributes path, encoding, httpMethod and httpHeaders, and bindings:
	
	define category bindings as:
		Java: prompto.internet.Url
		C#: prompto.internet.Url
		Python2: Url from module: prompto.internet.Url
		Python3: Url from module: prompto.internet.Url
		JavaScript: Url from module: prompto/internet/Url.js

define url as Url attribute

define "reads from www.google.com" as test method doing:
	// need a cross-domain enabled page for browser testing
	content = read all from Url with "https://www.google.com/" as path
and verifying: 
	content contains "doctype"


define "reads async from www.google.com" as test method doing:
	// need a cross-domain enabled page for browser testing
	content = ""
	read all from Url with "https://www.google.com/" as path then with result:
		content = result
and verifying: 
	content contains "doctype"


define encodeURI as native method receiving Text uri returning Text doing:
    Java: return java.net.URLEncoder.encode(uri, "UTF-8");
    C#: return System.Web.HttpUtility.UrlEncode(uri);
    Python2: return quote(uri) from module: urllib
    Python3: return quote(uri) from module: urllib.parse
    JavaScript: return encodeURIComponent(uri);


define decodeURI as native method receiving Text uri returning Text doing:
    Java: return java.net.URLDecoder.decode(uri, "UTF-8");
    C#: return System.Web.HttpUtility.UrlDecode(uri);
    Python2: return unquote(uri) from module: urllib
    Python3: return unquote(uri) from module: urllib.parse
    JavaScript: return decodeURIComponent(uri);

define "encodes and decodes uri" as test method doing:
	uri = "Black Mamba"
	encoded = encodeURI uri
	decoded = decodeURI encoded
and verifying: 
	encoded = "Black%20Mamba" or encoded = "Black+Mamba"
	uri = decoded

